# m���ȉ������o��
def mul(f_ary, b_ary, m)
  s1, s2 = f_ary.size, b_ary.size
  ary = Array.new(s1 + s2 - 1, 0)
  (0..s1 - 1).each{|i|
    (0..s2 - 1).each{|j|
      ary[i + j] += f_ary[i] * b_ary[j]
    }
  }
  ary[0..m]
end

def I(ary, n)
  a = [1]
  (0..n - 1).each{|i| a << -(0..i).inject(0){|s, j| s + ary[1 + i - j] * a[j]}}
  a
end

m = 1000
p_ary =
[1, -6, -64, 200, 1000, -3016, -3488, 24256,
 -23776, -104168, 203408, 184704, -443392,
 -14336, 151296, -145920, 263424, -317440,
 -36864, 966656, -573440, -131072]

ary10 =
[0, 0, 0, 0, 4, 0, -48, 0, -288, 40, 4080, -128, 8304,
  -4160, -129840, 9616, -56928, 147520,
  2069888, -422784, -1976096, -2638272, -16989728,
  10588096, 49127744, 25264416, 43640128,
  -154038272, -480240256, -88352640, 492078848,
  1345343232, 2283929344, -759748352, -5889424640,
  -6979236096, -3197127424, 11457284736, 29767983104,
  18716782592, -20244777472, -67039148032, -79128546304,
  -2928301056, 116776381440, 215361519616,
  85158279168, -142089760768, -253961678848,
  -384278726656, 69981736960, 415817261056,
  222768013312, 319373246464, -211960954880,
  -386769567744, 8300527616, 8727314432, -145041620992,
  -432856956928, 131836280832, -77447692288,
  769337458688, 1294827388928, -907254562816,
  -314502021120, -607814680576, -752482779136,
  764349513728, 462215970816, 509198991360,
  -578335801344, 298533781504, 121089556480,
  -933282971648, 571096432640, -757256421376,
  -335846309888, 1132394971136, 80396419072,
  -66571993088, -62545461248, -140660178944,
  24696061952, -8589934592]
ary11 = p_ary + [0] * (m - (p_ary.size - 1))
ary12 = I(mul(ary11, ary11, m), m)
ary13 = Array.new(m + 1, 0)
(0..m / 2).each{|i| ary13[2 * i] = ary12[i]}
x_ary = mul(ary10, ary13, m)

(4..m).each{|i|
  j = 0
  j += x_ary[i]
  break if j.to_s.size > 1000
  print i
  print ' '
  puts j
}
