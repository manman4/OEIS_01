# m���ȉ������o��
def mul(f_ary, b_ary, m)
  s1, s2 = f_ary.size, b_ary.size
  ary = Array.new(s1 + s2 - 1, 0)
  (0..s1 - 1).each{|i|
    (0..s2 - 1).each{|j|
      ary[i + j] += f_ary[i] * b_ary[j]
    }
  }
  ary[0..m]
end

def I(ary, n)
  a = [1]
  (0..n - 1).each{|i| a << -(0..i).inject(0){|s, j| s + ary[1 + i - j] * a[j]}}
  a
end

m = 2000
p_ary =
[1, -6, -64, 200, 1000, -3016, -3488, 24256,
 -23776, -104168, 203408, 184704, -443392,
 -14336, 151296, -145920, 263424, -317440,
 -36864, 966656, -573440, -131072]
q_ary =
[1, -4, -26, 4, -43, -116, 888, 1224,
 10292, 6052, -7088, 111280, -16192,
 -204080, 407232, -681472, 66432,
 -699392, -943104, -126976, 98304]
r_ary =
[1, -3, 0, -9, -14, 61, 110, 61, -35,
 -498, -1262, -356, 3864, 3788, -6008,
 -2472, -7532, -17956, 17732, 36088,
 -35176, 2256, 154624, 109008, 73376,
 71440, -104336, -762592, -277728, -123008,
 -573760, -771456, 221568, 122368, -1205760,
 1966592, 714752, -2555904, -412672, 1376256,
 -272384, -294912, 1781760, 860160, 516096,
 1081344, -65536, -262144, 131072]

x_ary10 =
[0, 0, 0, 0, 4, 0, -48, 0, -288, 40, 4080, -128, 8304,
  -4160, -129840, 9616, -56928, 147520,
  2069888, -422784, -1976096, -2638272, -16989728,
  10588096, 49127744, 25264416, 43640128,
  -154038272, -480240256, -88352640, 492078848,
  1345343232, 2283929344, -759748352, -5889424640,
  -6979236096, -3197127424, 11457284736, 29767983104,
  18716782592, -20244777472, -67039148032, -79128546304,
  -2928301056, 116776381440, 215361519616,
  85158279168, -142089760768, -253961678848,
  -384278726656, 69981736960, 415817261056,
  222768013312, 319373246464, -211960954880,
  -386769567744, 8300527616, 8727314432, -145041620992,
  -432856956928, 131836280832, -77447692288,
  769337458688, 1294827388928, -907254562816,
  -314502021120, -607814680576, -752482779136,
  764349513728, 462215970816, 509198991360,
  -578335801344, 298533781504, 121089556480,
  -933282971648, 571096432640, -757256421376,
  -335846309888, 1132394971136, 80396419072,
  -66571993088, -62545461248, -140660178944,
  24696061952, -8589934592]
f_ary10 =
[0, 0, 0, 0, 2, -6, -24, 106, -144, 114, 1664,
  -6926, 7366, -3292, -31736, 127060,
  -305992, 725624, 558488, -157912, 7578208,
  -40838744, -32722040, 21515280, -30817528,
  1135468760, 957921304, -2127349664, -3282178352,
  -18289474624, -9766563712, 57389285920, 88314622656,
  165936975168, -71992550272, -805406372704,
  -1003528928032, -540007109760, 2935329323328,
  6623410620416, 4357767275520, -5032135897856,
  -33132735926784, -30873041806848, 21214374942336,
  70184194934272, 182284323114752, 56990857545344,
  -387575520256640, -375140079438336, -339504370572288,
  177240746451456, 2208204967931392, 966073807826944,
  -1810468781539328, -1463547344658944, -5555536246382080,
  -482260312324608, 13527952206238208, 4619972116105216,
  -1270892348725248, -3418776026994688, -33255707248087040,
  -5598351308677120, 47530290255192064, -1771212246018048,
  -7143687273232384, -22854261970313216, -113166153151045632,
  81529112611176448, 321446313929924608,
  118905934343323648, -67578776451350528,
  -310285028137697280, -1131306052220059648,
  -126851756490555392, 1175846449370398720,
  601363823930769408, 1607868619136434176,
  -552787248540811264, -3575412627367657472,
  -1015359412059897856, 1058337940844576768,
  2037075530288988160, 5087121315676028928,
  2197803268855037952, -7051054534228705280,
  -1304881453988839424, -1627839796567605248,
  -4471248508938092544, 7805744798075191296,
  -5169887173316444160, -4657574446100381696,
  7833147106725462016, 2530012307426115584,
  10344290678678224896, 3603467720181415936,
  -11859357833558491136, -10525045902647754752,
  -1904470994244861952, 2522461193461825536,
  11023000479775850496, 7186997462064693248,
  -11658174056913436672, 883168908167610368,
  1278871538673647616, -5274890571914149888,
  9721262549378269184, -5878821800556625920,
  -12521937887433850880, 6026605718558212096,
  1816199633836179456, -3291755966793515008,
  6126696377306054656, 2753824204313853952,
  -2641340110343241728, 7097354463601491968,
  2295013902011858944, -7168679714175844352,
  -1839582321632608256, -764657423121121280,
  -131219565949485056, 1841873841303846912,
  62435218027446272, -372476606339350528,
  -268280837177344, -77865214455840768, -35223954507431936,
  53102013575069696, 43100855808819200,
  19333812462813184, -9359042975629312, -7283165022388224,
  3448068464705536, -703687441776640, 281474976710656]
b_ary10 =
[0, 0, 2, -32, -48, 3296, -5886, -164032,
  391524, 5212824, -12065416, -109770584,
  266379128, 1486254456, -4708482432, -11565226832,
  62547201600, 20674952288, -565499322144,
  617422025024, 3154884685888, -7903879847296,
  -8916228743296, 49649082204928, 2800961043840,
  -197892177039360, 11451254938624, 774942686621696,
  289061664938496, -4840897680566784, 165373451073536,
  27361482729664512, -22601140087775232, -90168221769553920,
  159142948298096640, 118800993057349632,
  -533938218121052160, 181529292851789824,
  890989951016534016, -907838493809704960,
  -309783234974711808, 1227863484369469440,
  -1482454816516472832, -416526075033812992,
  2494726588733063168, -188921545786130432,
  -406941817722896384, -663413869309329408,
  -2920555193030410240, 877457406215323648,
  3217626499423141888, -274148839198294016,
  -505635984335962112, 1027270910828085248,
  -519974870361047040, -2011779264315129856,
  326857439406194688, 30529744231464960,
  273065293306134528, 683954506592944128,
  -42996951959994368, -163260984050319360,
  -64457769666740224, -6852156464300032, -774056185954304,
  -140737488355328]
ary11 = p_ary + [0] * (m - (p_ary.size - 1))
ary12 = I(mul(ary11, ary11, m), m)
ary13 = Array.new(m + 1, 0)
(0..m / 2).each{|i| ary13[2 * i] = ary12[i]}
ary21 = q_ary + [0] * (m - (q_ary.size - 1))
ary22 = I(ary21, m)
ary23 = Array.new(m + 1, 0)
(0..m / 2).each{|i| ary23[2 * i] = ary22[i]}
ary31 = r_ary + [0] * (m - (r_ary.size - 1))
ary32 = I(ary31, m)
x_ary = mul(x_ary10, ary13, m)
f_ary41 = mul(ary13, ary32, m)
f_ary = mul(f_ary10, f_ary41, m)
b_ary41 = mul(ary12, ary22, m)
b_ary = mul(b_ary10, b_ary41, m)

(1..m).each{|i|
  j = 0
  j += b_ary[i / 2] if i % 2 == 0
  j += x_ary[i] + f_ary[i]
  break if j.to_s.size > 1000
  print i
  print ' '
  puts j
}
